<?xml version="1.0" encoding="UTF-8"?>
<component-configuration xmlns="http://tis.co.jp/nablarch/component-configuration"
                         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                         xsi:schemaLocation="http://tis.co.jp/nablarch/component-configuration ../../../../../../Nablarch/resources/component-configuration.xsd">

  <component name="initializer" class="nablarch.core.repository.initialization.BasicApplicationInitializer">
    <property name="initializeList">
      <list>
        <component-ref name="codeLoader" />
        <component-ref name="codeCache" />
        <component-ref name="formDefinitionCache" />
        <component-ref name="validationManager" />
        <component-ref name="domainValidator" />
      </list>
    </property>
  </component>

  <component name="statementFactory" class="nablarch.core.db.statement.BasicStatementFactory" autowireType="None" />

  <component name="codeLoader" class="nablarch.common.code.BasicCodeLoader">
    <property name="codePatternSchema">
      <component class="nablarch.common.code.schema.CodePatternSchema">
        <property name="tableName" value="CODE_PATTERN" />
        <property name="idColumnName" value="ID" />
        <property name="valueColumnName" value="VALUE" />
        <property name="patternColumnNames" value="PATTERN1,PATTERN2,PATTERN3" />
      </component>
    </property>
    <property name="codeNameSchema">
      <component class="nablarch.common.code.schema.CodeNameSchema">
        <property name="tableName" value="CODE_NAME" />
        <property name="idColumnName" value="ID" />
        <property name="valueColumnName" value="VALUE" />
        <property name="langColumnName" value="LANG" />
        <property name="sortOrderColumnName" value="SORT_ORDER" />
        <property name="nameColumnName" value="NAME" />
        <property name="shortNameColumnName" value="SHORT_NAME" />
        <property name="optionNameColumnNames" value="NAME_WITH_VALUE,OPTION01" />
      </component>
    </property>
  </component>

  <component name="codeCache" class="nablarch.core.cache.BasicStaticDataCache" >
    <property name="loader" ref="codeLoader" />
    <property name="loadOnStartup" value="false" />
  </component>

  <component name="codeManager" class="nablarch.common.code.MockCodeManager" autowireType="None">
    <property name="codeDefinitionCache" ref="codeCache" />
  </component>

  <component name="stringResourceHolder" class="nablarch.core.message.MockStringResourceHolder" />

  <component name="formDefinitionCache" class="nablarch.core.cache.BasicStaticDataCache">
    <property name="loader">
      <component class="nablarch.core.validation.FormValidationDefinitionLoader" />
    </property>
  </component>

  <component name="domainValidationHelper" class="nablarch.core.validation.domain.DomainValidationHelper">
    <property name="domainAnnotation" value="nablarch.core.validation.domain.sample.Domain" />
  </component>

  <component name="validationManager" class="nablarch.core.validation.ValidationManager">
    <property name="convertors">
      <list>
        <component-ref name="stringConvertor" />
        <component-ref name="stringArrayConvertor" />
        <component-ref name="integerConvertor" />
        <component-ref name="longConvertor" />
        <component-ref name="bigDecimalConvertor" />
        <component-ref name="booleanConvertor" />
      </list>
    </property>
    <property name="validators">
      <list>
        <component-ref name="requiredValidator" />
        <component-ref name="numberRangeValidator" />
        <component-ref name="lengthValidator" />
        <component-ref name="codeValueValidator" />
        <component-ref name="systemCharValidator" />
        <component-ref name="domainValidator" />
      </list>
    </property>
    <property name="formDefinitionCache" ref="formDefinitionCache" />
    <property name="domainValidationHelper" ref="domainValidationHelper" />
  </component>

  <!-- convertors end -->

  <component name="stringConvertor" class="nablarch.core.validation.convertor.StringConvertor">
    <property name="conversionFailedMessageId" value="M001" />
    <property name="allowNullValue" value="false" />
    <property name="extendedStringConvertors">
      <list>
        <component class="nablarch.common.date.YYYYMMDDConvertor">
          <property name="parseFailedMessageId" value="M002" />
        </component>
      </list>
    </property>
  </component>

  <component name="stringArrayConvertor" class="nablarch.core.validation.convertor.StringArrayConvertor" />

  <component name="integerConvertor" class="nablarch.core.validation.convertor.IntegerConvertor">
    <property name="invalidDigitsIntegerMessageId" value="M003" />
    <property name="multiInputMessageId" value="M005" />
    <property name="allowNullValue" value="false" />
  </component>

  <component name="longConvertor" class="nablarch.core.validation.convertor.LongConvertor">
    <property name="invalidDigitsIntegerMessageId" value="M003" />
    <property name="multiInputMessageId" value="M005" />
    <property name="allowNullValue" value="false" />
  </component>

  <component name="bigDecimalConvertor" class="nablarch.core.validation.convertor.BigDecimalConvertor">
    <property name="invalidDigitsIntegerMessageId" value="M003" />
    <property name="invalidDigitsFractionMessageId" value="M004" />
    <property name="multiInputMessageId" value="M005" />
    <property name="allowNullValue" value="false" />
  </component>

  <component name="booleanConvertor" class="nablarch.core.validation.convertor.BooleanConvertor">
    <property name="conversionFailedMessageId" value="M006" />
    <property name="allowNullValue" value="false" />
  </component>

  <!-- convertors end -->

  <!-- validators start -->

  <component name="requiredValidator" class="nablarch.core.validation.validator.RequiredValidator">
    <property name="messageId" value="M007" />
  </component>

  <component name="numberRangeValidator" class="nablarch.core.validation.validator.NumberRangeValidator">
    <property name="maxMessageId" value="M008" />
    <property name="maxAndMinMessageId" value="M009" />
    <property name="minMessageId" value="M010" />
  </component>

  <component name="lengthValidator" class="nablarch.core.validation.validator.LengthValidator">
    <property name="maxMessageId" value="M011" />
    <property name="maxAndMinMessageId" value="M012" />
    <property name="fixLengthMessageId" value="M013" />
  </component>

  <component name="codeValueValidator" class="nablarch.common.code.validator.CodeValueValidator">
    <property name="messageId" value="M014" />
  </component>

  <component name="systemCharValidator" class="nablarch.core.validation.validator.unicode.SystemCharValidator">
    <property name="messageId" value="M015" />
    <property name="defaultCharsetDef">
      <component class="nablarch.core.validation.validator.unicode.LiteralCharsetDef">
        <property name="allowedCharacters" value="abcdefghijklmnopqrstuvwxyz" />
      </component>
    </property>
  </component>

  <component name="domainValidator" class="nablarch.core.validation.domain.DomainValidator">
    <property name="validators">
      <list>
        <component-ref name="requiredValidator" />
        <component-ref name="numberRangeValidator" />
        <component-ref name="lengthValidator" />
        <component-ref name="codeValueValidator" />
        <component-ref name="systemCharValidator" />
      </list>
    </property>
    <property name="domainValidationHelper" ref="domainValidationHelper" />
  </component>

  <component name="domainValidator2" class="nablarch.core.validation.domain.sample.DirectCallableDomainValidator">
    <property name="validators">
      <list>
        <component-ref name="requiredValidator" />
        <component-ref name="numberRangeValidator" />
        <component-ref name="lengthValidator" />
        <component-ref name="codeValueValidator" />
        <component-ref name="systemCharValidator" />
      </list>
    </property>
    <property name="domainValidationHelper" ref="domainValidationHelper" />
  </component>

  <!-- validators end -->

</component-configuration>
